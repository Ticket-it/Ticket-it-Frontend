apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "com.ibotta.gradle.aop"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }

}

android {
    namespace 'me.jdvp.androidaspectexample'
    defaultConfig {
        applicationId "me.jdvp.androidaspectexample"
        minSdkVersion 23
        targetSdkVersion 33
        compileSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
//        sourceCompatibility JavaVersion.VERSION_17
//        targetCompatibility JavaVersion.VERSION_17
    }

    /*
    Required when using above Kotlin 1.5, otherwise Kotlin lambdas will be compiled using
    LambdaMetafactory.metafactory() which means that aspects cannot be matched since the
    generated lambdas won't have the expected method names. You can see my write-up of the
    issue here:
    https://github.com/Ibotta/gradle-aspectj-pipeline-plugin/issues/8
     */
    kotlinOptions {
        freeCompilerArgs = ["-Xsam-conversions=class"]
    }



}

dependencies {
    //AppCompat
    implementation "androidx.appcompat:appcompat:1.6.1"

    //AspectJ
    implementation "org.aspectj:aspectjrt:1.9.7"
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


}